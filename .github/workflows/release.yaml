# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Publish Docker image

on:
  release:
    types: [published]

jobs:
  build-and-push-amd64:
    name: Push amd64 image to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: docker meta
        id: docker_meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.IMAGE_NAME }}
          flavor: |
            latest=false
          tags: |
            type=semver,pattern={{version}},enable=${{ contains(github.ref, 'refs/tags/v') }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          platform: linux/amd64
          push: true
          file: Dockerfile
          tags: ${{ steps.meta.outputs.tags }}-amd64
          labels: ${{ steps.meta.outputs.labels }}

  build-and-push-arm64:
    name: Push arm64 image to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: docker meta
        id: docker_meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.IMAGE_NAME }}
          flavor: |
            latest=false
          tags: |
            type=semver,pattern={{version}},enable=${{ contains(github.ref, 'refs/tags/v') }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          platform: linux/arm64
          push: true
          file: Dockerfile
          tags: ${{ steps.meta.outputs.tags }}-arm64
          labels: ${{ steps.meta.outputs.labels }}

  build-and-push-ppc64le:
    name: Push ppc64le image to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: docker meta
        id: docker_meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.IMAGE_NAME }}
          flavor: |
            latest=false
          tags: |
            type=semver,pattern={{version}},enable=${{ contains(github.ref, 'refs/tags/v') }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          platform: linux/ppc64le
          push: true
          file: Dockerfile
          tags: ${{ steps.meta.outputs.tags }}-ppc64le
          labels: ${{ steps.meta.outputs.labels }}

  push-manifest:
    runs-on: ubuntu-22.04
    needs: [build-and-push-amd64,build-and-push-arm64,build-and-push-ppc64le]
    steps:
      - name: set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: docker meta
        id: docker_meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.IMAGE_NAME }}
          flavor: |
            latest=false
          tags: |
            type=semver,pattern={{version}},enable=${{ contains(github.ref, 'refs/tags/v') }}

      - name: login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: create manifest for multi-arch images
        run: |
          docker buildx imagetools create -t ${{ steps.docker_meta.outputs.tags }} \
            ${{ steps.docker_meta.outputs.tags }}-amd64 \
            ${{ steps.docker_meta.outputs.tags }}-arm64 \
            ${{ steps.docker_meta.outputs.tags }}-ppc64le